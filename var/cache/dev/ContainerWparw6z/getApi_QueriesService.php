<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'api.queries' shared service.

include_once $this->targetDirs[3].'/app/Plugin/Api/GraphQL/Query.php';
include_once $this->targetDirs[3].'/app/Plugin/Api/GraphQL/Query/SingleResultQuery.php';
include_once $this->targetDirs[3].'/app/Plugin/Api/GraphQL/Query/CustomerQuery.php';
include_once $this->targetDirs[3].'/app/Plugin/Api/GraphQL/Query/SearchFormQuery.php';
include_once $this->targetDirs[3].'/app/Plugin/Api/GraphQL/Query/CustomersQuery.php';
include_once $this->targetDirs[3].'/app/Plugin/Api/GraphQL/Query/OrderQuery.php';
include_once $this->targetDirs[3].'/app/Plugin/Api/GraphQL/Query/OrdersQuery.php';
include_once $this->targetDirs[3].'/app/Plugin/Api/GraphQL/Query/ProductQuery.php';
include_once $this->targetDirs[3].'/app/Plugin/Api/GraphQL/Query/ProductsQuery.php';

$this->services['api.queries'] = $instance = new \ArrayObject();

$a = new \Plugin\Api\GraphQL\Query\CustomerQuery();

$b = ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->getDoctrine_Orm_DefaultEntityManagerService()) && false ?: '_'};
$c = ${($_ = isset($this->services['Plugin\\Api\\GraphQL\\Types']) ? $this->services['Plugin\\Api\\GraphQL\\Types'] : $this->load('getTypesService.php')) && false ?: '_'};

$a->setEntityManager($b);
$a->setTypes($c);
$d = new \Plugin\Api\GraphQL\Query\CustomersQuery(${($_ = isset($this->services['Eccube\\Repository\\CustomerRepository']) ? $this->services['Eccube\\Repository\\CustomerRepository'] : $this->load('getCustomerRepositoryService.php')) && false ?: '_'});

$e = ${($_ = isset($this->services['knp_paginator']) ? $this->services['knp_paginator'] : $this->load('getKnpPaginatorService.php')) && false ?: '_'};
$f = ${($_ = isset($this->services['Eccube\\Common\\EccubeConfig']) ? $this->services['Eccube\\Common\\EccubeConfig'] : ($this->services['Eccube\\Common\\EccubeConfig'] = new \Eccube\Common\EccubeConfig($this))) && false ?: '_'};
$g = ${($_ = isset($this->services['form.factory']) ? $this->services['form.factory'] : $this->load('getForm_FactoryService.php')) && false ?: '_'};

$d->setPaginator($e);
$d->setEccubeConfig($f);
$d->setFormFactory($g);
$d->setTypes($c);
$h = new \Plugin\Api\GraphQL\Query\OrderQuery();
$h->setEntityManager($b);
$h->setTypes($c);
$i = new \Plugin\Api\GraphQL\Query\OrdersQuery(${($_ = isset($this->services['Eccube\\Repository\\OrderRepository']) ? $this->services['Eccube\\Repository\\OrderRepository'] : $this->getOrderRepositoryService()) && false ?: '_'});
$i->setPaginator($e);
$i->setEccubeConfig($f);
$i->setFormFactory($g);
$i->setTypes($c);
$j = new \Plugin\Api\GraphQL\Query\ProductQuery();
$j->setEntityManager($b);
$j->setTypes($c);
$k = new \Plugin\Api\GraphQL\Query\ProductsQuery(${($_ = isset($this->services['Eccube\\Repository\\ProductRepository']) ? $this->services['Eccube\\Repository\\ProductRepository'] : $this->getProductRepositoryService()) && false ?: '_'});
$k->setPaginator($e);
$k->setEccubeConfig($f);
$k->setFormFactory($g);
$k->setTypes($c);

$instance->append($a);
$instance->append($d);
$instance->append($h);
$instance->append($i);
$instance->append($j);
$instance->append($k);

return $instance;
