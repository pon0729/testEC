<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'form.registry' shared service.

include_once $this->targetDirs[3].'/vendor/symfony/form/FormRegistryInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/FormRegistry.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/FormExtensionInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/Extension/DependencyInjection/DependencyInjectionExtension.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/ResolvedFormTypeFactoryInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/ResolvedFormTypeFactory.php';

return $this->services['form.registry'] = new \Symfony\Component\Form\FormRegistry([0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\ServiceLocator(['Eccube\\Form\\Type\\AddCartType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\AddCartType']) ? $this->services['Eccube\\Form\\Type\\AddCartType'] : $this->load('getAddCartTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\AddressType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\AddressType']) ? $this->services['Eccube\\Form\\Type\\AddressType'] : $this->load('getAddressTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\AuthenticationType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\AuthenticationType']) ? $this->services['Eccube\\Form\\Type\\Admin\\AuthenticationType'] : $this->load('getAuthenticationTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\AuthorityRoleType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\AuthorityRoleType']) ? $this->services['Eccube\\Form\\Type\\Admin\\AuthorityRoleType'] : ($this->services['Eccube\\Form\\Type\\Admin\\AuthorityRoleType'] = new \Eccube\Form\Type\Admin\AuthorityRoleType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\BlockType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\BlockType']) ? $this->services['Eccube\\Form\\Type\\Admin\\BlockType'] : $this->load('getBlockTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\CategoryType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\CategoryType']) ? $this->services['Eccube\\Form\\Type\\Admin\\CategoryType'] : $this->load('getCategoryTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\ChangePasswordType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\ChangePasswordType']) ? $this->services['Eccube\\Form\\Type\\Admin\\ChangePasswordType'] : $this->load('getChangePasswordTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\ClassCategoryType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\ClassCategoryType']) ? $this->services['Eccube\\Form\\Type\\Admin\\ClassCategoryType'] : $this->load('getClassCategoryTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\ClassNameType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\ClassNameType']) ? $this->services['Eccube\\Form\\Type\\Admin\\ClassNameType'] : $this->load('getClassNameTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\CsvImportType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\CsvImportType']) ? $this->services['Eccube\\Form\\Type\\Admin\\CsvImportType'] : $this->load('getCsvImportTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\CustomerType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\CustomerType']) ? $this->services['Eccube\\Form\\Type\\Admin\\CustomerType'] : $this->load('getCustomerTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\DeliveryFeeType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\DeliveryFeeType']) ? $this->services['Eccube\\Form\\Type\\Admin\\DeliveryFeeType'] : ($this->services['Eccube\\Form\\Type\\Admin\\DeliveryFeeType'] = new \Eccube\Form\Type\Admin\DeliveryFeeType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\DeliveryTimeType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\DeliveryTimeType']) ? $this->services['Eccube\\Form\\Type\\Admin\\DeliveryTimeType'] : ($this->services['Eccube\\Form\\Type\\Admin\\DeliveryTimeType'] = new \Eccube\Form\Type\Admin\DeliveryTimeType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\DeliveryType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\DeliveryType']) ? $this->services['Eccube\\Form\\Type\\Admin\\DeliveryType'] : $this->load('getDeliveryTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\LayoutType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\LayoutType']) ? $this->services['Eccube\\Form\\Type\\Admin\\LayoutType'] : ($this->services['Eccube\\Form\\Type\\Admin\\LayoutType'] = new \Eccube\Form\Type\Admin\LayoutType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\LogType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\LogType']) ? $this->services['Eccube\\Form\\Type\\Admin\\LogType'] : $this->load('getLogTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\LoginType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\LoginType']) ? $this->services['Eccube\\Form\\Type\\Admin\\LoginType'] : $this->load('getLoginTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\MailType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\MailType']) ? $this->services['Eccube\\Form\\Type\\Admin\\MailType'] : ($this->services['Eccube\\Form\\Type\\Admin\\MailType'] = new \Eccube\Form\Type\Admin\MailType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\MainEditType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\MainEditType']) ? $this->services['Eccube\\Form\\Type\\Admin\\MainEditType'] : $this->load('getMainEditTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\MasterdataDataType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\MasterdataDataType']) ? $this->services['Eccube\\Form\\Type\\Admin\\MasterdataDataType'] : $this->load('getMasterdataDataTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\MasterdataEditType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\MasterdataEditType']) ? $this->services['Eccube\\Form\\Type\\Admin\\MasterdataEditType'] : ($this->services['Eccube\\Form\\Type\\Admin\\MasterdataEditType'] = new \Eccube\Form\Type\Admin\MasterdataEditType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\MasterdataType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\MasterdataType']) ? $this->services['Eccube\\Form\\Type\\Admin\\MasterdataType'] : $this->load('getMasterdataTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\MemberType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\MemberType']) ? $this->services['Eccube\\Form\\Type\\Admin\\MemberType'] : $this->load('getMemberTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\NewsType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\NewsType']) ? $this->services['Eccube\\Form\\Type\\Admin\\NewsType'] : $this->load('getNewsTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\OrderItemForShippingRegistrationType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\OrderItemForShippingRegistrationType']) ? $this->services['Eccube\\Form\\Type\\Admin\\OrderItemForShippingRegistrationType'] : $this->load('getOrderItemForShippingRegistrationTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\OrderItemType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\OrderItemType']) ? $this->services['Eccube\\Form\\Type\\Admin\\OrderItemType'] : $this->load('getOrderItemTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\OrderMailType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\OrderMailType']) ? $this->services['Eccube\\Form\\Type\\Admin\\OrderMailType'] : $this->load('getOrderMailTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\OrderPdfType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\OrderPdfType']) ? $this->services['Eccube\\Form\\Type\\Admin\\OrderPdfType'] : $this->load('getOrderPdfTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\OrderType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\OrderType']) ? $this->services['Eccube\\Form\\Type\\Admin\\OrderType'] : $this->load('getOrderTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\PageType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\PageType']) ? $this->services['Eccube\\Form\\Type\\Admin\\PageType'] : ($this->services['Eccube\\Form\\Type\\Admin\\PageType'] = new \Eccube\Form\Type\Admin\PageType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\PaymentRegisterType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\PaymentRegisterType']) ? $this->services['Eccube\\Form\\Type\\Admin\\PaymentRegisterType'] : $this->load('getPaymentRegisterTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\PluginLocalInstallType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\PluginLocalInstallType']) ? $this->services['Eccube\\Form\\Type\\Admin\\PluginLocalInstallType'] : ($this->services['Eccube\\Form\\Type\\Admin\\PluginLocalInstallType'] = new \Eccube\Form\Type\Admin\PluginLocalInstallType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\PluginManagementType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\PluginManagementType']) ? $this->services['Eccube\\Form\\Type\\Admin\\PluginManagementType'] : ($this->services['Eccube\\Form\\Type\\Admin\\PluginManagementType'] = new \Eccube\Form\Type\Admin\PluginManagementType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\ProductClassEditType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\ProductClassEditType']) ? $this->services['Eccube\\Form\\Type\\Admin\\ProductClassEditType'] : $this->load('getProductClassEditTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\ProductClassMatrixType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\ProductClassMatrixType']) ? $this->services['Eccube\\Form\\Type\\Admin\\ProductClassMatrixType'] : ($this->services['Eccube\\Form\\Type\\Admin\\ProductClassMatrixType'] = new \Eccube\Form\Type\Admin\ProductClassMatrixType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\ProductClassType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\ProductClassType']) ? $this->services['Eccube\\Form\\Type\\Admin\\ProductClassType'] : $this->load('getProductClassTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\ProductTag' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\ProductTag']) ? $this->services['Eccube\\Form\\Type\\Admin\\ProductTag'] : $this->load('getProductTagService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\ProductType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\ProductType']) ? $this->services['Eccube\\Form\\Type\\Admin\\ProductType'] : $this->load('getProductTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\SearchCustomerType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\SearchCustomerType']) ? $this->services['Eccube\\Form\\Type\\Admin\\SearchCustomerType'] : $this->load('getSearchCustomerTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\SearchOrderType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\SearchOrderType']) ? $this->services['Eccube\\Form\\Type\\Admin\\SearchOrderType'] : $this->load('getSearchOrderTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\SearchPluginApiType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\SearchPluginApiType']) ? $this->services['Eccube\\Form\\Type\\Admin\\SearchPluginApiType'] : ($this->services['Eccube\\Form\\Type\\Admin\\SearchPluginApiType'] = new \Eccube\Form\Type\Admin\SearchPluginApiType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\SearchProductType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\SearchProductType']) ? $this->services['Eccube\\Form\\Type\\Admin\\SearchProductType'] : $this->load('getSearchProductTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\SecurityType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\SecurityType']) ? $this->services['Eccube\\Form\\Type\\Admin\\SecurityType'] : $this->load('getSecurityTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\ShippingType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\ShippingType']) ? $this->services['Eccube\\Form\\Type\\Admin\\ShippingType'] : $this->load('getShippingTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\ShopMasterType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\ShopMasterType']) ? $this->services['Eccube\\Form\\Type\\Admin\\ShopMasterType'] : $this->load('getShopMasterTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\TagType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\TagType']) ? $this->services['Eccube\\Form\\Type\\Admin\\TagType'] : ($this->services['Eccube\\Form\\Type\\Admin\\TagType'] = new \Eccube\Form\Type\Admin\TagType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\TaxRuleType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\TaxRuleType']) ? $this->services['Eccube\\Form\\Type\\Admin\\TaxRuleType'] : $this->load('getTaxRuleTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Admin\\TemplateType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Admin\\TemplateType']) ? $this->services['Eccube\\Form\\Type\\Admin\\TemplateType'] : $this->load('getTemplateTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Front\\ContactType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Front\\ContactType']) ? $this->services['Eccube\\Form\\Type\\Front\\ContactType'] : $this->load('getContactTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Front\\CustomerAddressType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Front\\CustomerAddressType']) ? $this->services['Eccube\\Form\\Type\\Front\\CustomerAddressType'] : $this->load('getCustomerAddressTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Front\\CustomerLoginType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Front\\CustomerLoginType']) ? $this->services['Eccube\\Form\\Type\\Front\\CustomerLoginType'] : $this->load('getCustomerLoginTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Front\\EntryType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Front\\EntryType']) ? $this->services['Eccube\\Form\\Type\\Front\\EntryType'] : $this->load('getEntryTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Front\\ForgotType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Front\\ForgotType']) ? $this->services['Eccube\\Form\\Type\\Front\\ForgotType'] : $this->load('getForgotTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Front\\NonMemberType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Front\\NonMemberType']) ? $this->services['Eccube\\Form\\Type\\Front\\NonMemberType'] : $this->load('getNonMemberTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Front\\PasswordResetType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Front\\PasswordResetType']) ? $this->services['Eccube\\Form\\Type\\Front\\PasswordResetType'] : $this->load('getPasswordResetTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Front\\ShoppingShippingType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Front\\ShoppingShippingType']) ? $this->services['Eccube\\Form\\Type\\Front\\ShoppingShippingType'] : ($this->services['Eccube\\Form\\Type\\Front\\ShoppingShippingType'] = new \Eccube\Form\Type\Front\ShoppingShippingType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Install\\Step1Type' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Install\\Step1Type']) ? $this->services['Eccube\\Form\\Type\\Install\\Step1Type'] : ($this->services['Eccube\\Form\\Type\\Install\\Step1Type'] = new \Eccube\Form\Type\Install\Step1Type())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Install\\Step3Type' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Install\\Step3Type']) ? $this->services['Eccube\\Form\\Type\\Install\\Step3Type'] : $this->load('getStep3TypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Install\\Step4Type' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Install\\Step4Type']) ? $this->services['Eccube\\Form\\Type\\Install\\Step4Type'] : $this->load('getStep4TypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Install\\Step5Type' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Install\\Step5Type']) ? $this->services['Eccube\\Form\\Type\\Install\\Step5Type'] : ($this->services['Eccube\\Form\\Type\\Install\\Step5Type'] = new \Eccube\Form\Type\Install\Step5Type())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\KanaType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\KanaType']) ? $this->services['Eccube\\Form\\Type\\KanaType'] : $this->load('getKanaTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\MasterType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\MasterType']) ? $this->services['Eccube\\Form\\Type\\MasterType'] : ($this->services['Eccube\\Form\\Type\\MasterType'] = new \Eccube\Form\Type\MasterType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\CategoryType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\CategoryType']) ? $this->services['Eccube\\Form\\Type\\Master\\CategoryType'] : ($this->services['Eccube\\Form\\Type\\Master\\CategoryType'] = new \Eccube\Form\Type\Master\CategoryType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\CsvType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\CsvType']) ? $this->services['Eccube\\Form\\Type\\Master\\CsvType'] : ($this->services['Eccube\\Form\\Type\\Master\\CsvType'] = new \Eccube\Form\Type\Master\CsvType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\CustomerStatusType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\CustomerStatusType']) ? $this->services['Eccube\\Form\\Type\\Master\\CustomerStatusType'] : ($this->services['Eccube\\Form\\Type\\Master\\CustomerStatusType'] = new \Eccube\Form\Type\Master\CustomerStatusType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\DeliveryDurationType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\DeliveryDurationType']) ? $this->services['Eccube\\Form\\Type\\Master\\DeliveryDurationType'] : ($this->services['Eccube\\Form\\Type\\Master\\DeliveryDurationType'] = new \Eccube\Form\Type\Master\DeliveryDurationType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\DeviceTypeType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\DeviceTypeType']) ? $this->services['Eccube\\Form\\Type\\Master\\DeviceTypeType'] : ($this->services['Eccube\\Form\\Type\\Master\\DeviceTypeType'] = new \Eccube\Form\Type\Master\DeviceTypeType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\JobType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\JobType']) ? $this->services['Eccube\\Form\\Type\\Master\\JobType'] : ($this->services['Eccube\\Form\\Type\\Master\\JobType'] = new \Eccube\Form\Type\Master\JobType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\MailTemplateType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\MailTemplateType']) ? $this->services['Eccube\\Form\\Type\\Master\\MailTemplateType'] : ($this->services['Eccube\\Form\\Type\\Master\\MailTemplateType'] = new \Eccube\Form\Type\Master\MailTemplateType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\OrderStatusType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\OrderStatusType']) ? $this->services['Eccube\\Form\\Type\\Master\\OrderStatusType'] : $this->load('getOrderStatusTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\PageMaxType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\PageMaxType']) ? $this->services['Eccube\\Form\\Type\\Master\\PageMaxType'] : ($this->services['Eccube\\Form\\Type\\Master\\PageMaxType'] = new \Eccube\Form\Type\Master\PageMaxType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\PaymentType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\PaymentType']) ? $this->services['Eccube\\Form\\Type\\Master\\PaymentType'] : ($this->services['Eccube\\Form\\Type\\Master\\PaymentType'] = new \Eccube\Form\Type\Master\PaymentType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\PrefType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\PrefType']) ? $this->services['Eccube\\Form\\Type\\Master\\PrefType'] : ($this->services['Eccube\\Form\\Type\\Master\\PrefType'] = new \Eccube\Form\Type\Master\PrefType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\ProductListMaxType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\ProductListMaxType']) ? $this->services['Eccube\\Form\\Type\\Master\\ProductListMaxType'] : ($this->services['Eccube\\Form\\Type\\Master\\ProductListMaxType'] = new \Eccube\Form\Type\Master\ProductListMaxType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\ProductListOrderByType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\ProductListOrderByType']) ? $this->services['Eccube\\Form\\Type\\Master\\ProductListOrderByType'] : ($this->services['Eccube\\Form\\Type\\Master\\ProductListOrderByType'] = new \Eccube\Form\Type\Master\ProductListOrderByType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\ProductStatusType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\ProductStatusType']) ? $this->services['Eccube\\Form\\Type\\Master\\ProductStatusType'] : ($this->services['Eccube\\Form\\Type\\Master\\ProductStatusType'] = new \Eccube\Form\Type\Master\ProductStatusType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\RoundingTypeType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\RoundingTypeType']) ? $this->services['Eccube\\Form\\Type\\Master\\RoundingTypeType'] : ($this->services['Eccube\\Form\\Type\\Master\\RoundingTypeType'] = new \Eccube\Form\Type\Master\RoundingTypeType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\SaleTypeType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\SaleTypeType']) ? $this->services['Eccube\\Form\\Type\\Master\\SaleTypeType'] : ($this->services['Eccube\\Form\\Type\\Master\\SaleTypeType'] = new \Eccube\Form\Type\Master\SaleTypeType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Master\\SexType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Master\\SexType']) ? $this->services['Eccube\\Form\\Type\\Master\\SexType'] : ($this->services['Eccube\\Form\\Type\\Master\\SexType'] = new \Eccube\Form\Type\Master\SexType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\NameType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\NameType']) ? $this->services['Eccube\\Form\\Type\\NameType'] : $this->load('getNameTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\PhoneNumberType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\PhoneNumberType']) ? $this->services['Eccube\\Form\\Type\\PhoneNumberType'] : $this->load('getPhoneNumberTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\PostalType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\PostalType']) ? $this->services['Eccube\\Form\\Type\\PostalType'] : $this->load('getPostalTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\PriceType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\PriceType']) ? $this->services['Eccube\\Form\\Type\\PriceType'] : $this->load('getPriceTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\RepeatedEmailType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\RepeatedEmailType']) ? $this->services['Eccube\\Form\\Type\\RepeatedEmailType'] : $this->load('getRepeatedEmailTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\RepeatedPasswordType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\RepeatedPasswordType']) ? $this->services['Eccube\\Form\\Type\\RepeatedPasswordType'] : $this->load('getRepeatedPasswordTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\SearchProductBlockType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\SearchProductBlockType']) ? $this->services['Eccube\\Form\\Type\\SearchProductBlockType'] : $this->load('getSearchProductBlockTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\SearchProductType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\SearchProductType']) ? $this->services['Eccube\\Form\\Type\\SearchProductType'] : $this->load('getSearchProductType2Service.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\ShippingMultipleItemType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\ShippingMultipleItemType']) ? $this->services['Eccube\\Form\\Type\\ShippingMultipleItemType'] : $this->load('getShippingMultipleItemTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\ShippingMultipleType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\ShippingMultipleType']) ? $this->services['Eccube\\Form\\Type\\ShippingMultipleType'] : $this->load('getShippingMultipleTypeService.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\ShoppingMultipleType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\ShoppingMultipleType']) ? $this->services['Eccube\\Form\\Type\\ShoppingMultipleType'] : ($this->services['Eccube\\Form\\Type\\ShoppingMultipleType'] = new \Eccube\Form\Type\ShoppingMultipleType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Shopping\\CustomerAddressType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Shopping\\CustomerAddressType']) ? $this->services['Eccube\\Form\\Type\\Shopping\\CustomerAddressType'] : ($this->services['Eccube\\Form\\Type\\Shopping\\CustomerAddressType'] = new \Eccube\Form\Type\Shopping\CustomerAddressType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Shopping\\OrderItemType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Shopping\\OrderItemType']) ? $this->services['Eccube\\Form\\Type\\Shopping\\OrderItemType'] : ($this->services['Eccube\\Form\\Type\\Shopping\\OrderItemType'] = new \Eccube\Form\Type\Shopping\OrderItemType())) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Shopping\\OrderType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Shopping\\OrderType']) ? $this->services['Eccube\\Form\\Type\\Shopping\\OrderType'] : $this->load('getOrderType2Service.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\Shopping\\ShippingType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\Shopping\\ShippingType']) ? $this->services['Eccube\\Form\\Type\\Shopping\\ShippingType'] : $this->load('getShippingType2Service.php')) && false ?: '_'};
}, 'Eccube\\Form\\Type\\ToggleSwitchType' => function () {
    return ${($_ = isset($this->services['Eccube\\Form\\Type\\ToggleSwitchType']) ? $this->services['Eccube\\Form\\Type\\ToggleSwitchType'] : ($this->services['Eccube\\Form\\Type\\ToggleSwitchType'] = new \Eccube\Form\Type\ToggleSwitchType())) && false ?: '_'};
}, 'Plugin\\Api\\Form\\Type\\Admin\\ClientType' => function () {
    return ${($_ = isset($this->services['Plugin\\Api\\Form\\Type\\Admin\\ClientType']) ? $this->services['Plugin\\Api\\Form\\Type\\Admin\\ClientType'] : $this->load('getClientTypeService.php')) && false ?: '_'};
}, 'Plugin\\Api\\Form\\Type\\Admin\\OAuth2AuthorizationType' => function () {
    return ${($_ = isset($this->services['Plugin\\Api\\Form\\Type\\Admin\\OAuth2AuthorizationType']) ? $this->services['Plugin\\Api\\Form\\Type\\Admin\\OAuth2AuthorizationType'] : $this->load('getOAuth2AuthorizationTypeService.php')) && false ?: '_'};
}, 'Plugin\\Api\\Form\\Type\\Admin\\WebHookType' => function () {
    return ${($_ = isset($this->services['Plugin\\Api\\Form\\Type\\Admin\\WebHookType']) ? $this->services['Plugin\\Api\\Form\\Type\\Admin\\WebHookType'] : ($this->services['Plugin\\Api\\Form\\Type\\Admin\\WebHookType'] = new \Plugin\Api\Form\Type\Admin\WebHookType())) && false ?: '_'};
}, 'Plugin\\CategoryRecommend4\\Form\\Type\\CategoryRecommendProductType' => function () {
    return ${($_ = isset($this->services['Plugin\\CategoryRecommend4\\Form\\Type\\CategoryRecommendProductType']) ? $this->services['Plugin\\CategoryRecommend4\\Form\\Type\\CategoryRecommendProductType'] : $this->load('getCategoryRecommendProductTypeService.php')) && false ?: '_'};
}, 'Plugin\\ContactManagement4\\Form\\Type\\Admin\\ConfigType' => function () {
    return ${($_ = isset($this->services['Plugin\\ContactManagement4\\Form\\Type\\Admin\\ConfigType']) ? $this->services['Plugin\\ContactManagement4\\Form\\Type\\Admin\\ConfigType'] : ($this->services['Plugin\\ContactManagement4\\Form\\Type\\Admin\\ConfigType'] = new \Plugin\ContactManagement4\Form\Type\Admin\ConfigType())) && false ?: '_'};
}, 'Plugin\\ContactManagement4\\Form\\Type\\Admin\\ContactReplyType' => function () {
    return ${($_ = isset($this->services['Plugin\\ContactManagement4\\Form\\Type\\Admin\\ContactReplyType']) ? $this->services['Plugin\\ContactManagement4\\Form\\Type\\Admin\\ContactReplyType'] : $this->load('getContactReplyTypeService.php')) && false ?: '_'};
}, 'Plugin\\ContactManagement4\\Form\\Type\\Admin\\ContactType' => function () {
    return ${($_ = isset($this->services['Plugin\\ContactManagement4\\Form\\Type\\Admin\\ContactType']) ? $this->services['Plugin\\ContactManagement4\\Form\\Type\\Admin\\ContactType'] : $this->load('getContactType2Service.php')) && false ?: '_'};
}, 'Plugin\\ContactManagement4\\Form\\Type\\Admin\\SearchContactType' => function () {
    return ${($_ = isset($this->services['Plugin\\ContactManagement4\\Form\\Type\\Admin\\SearchContactType']) ? $this->services['Plugin\\ContactManagement4\\Form\\Type\\Admin\\SearchContactType'] : $this->load('getSearchContactTypeService.php')) && false ?: '_'};
}, 'Plugin\\ContactManagement4\\Form\\Type\\Master\\ContactStatusType' => function () {
    return ${($_ = isset($this->services['Plugin\\ContactManagement4\\Form\\Type\\Master\\ContactStatusType']) ? $this->services['Plugin\\ContactManagement4\\Form\\Type\\Master\\ContactStatusType'] : ($this->services['Plugin\\ContactManagement4\\Form\\Type\\Master\\ContactStatusType'] = new \Plugin\ContactManagement4\Form\Type\Master\ContactStatusType())) && false ?: '_'};
}, 'Plugin\\ReferralCode\\Form\\Type\\Admin\\ReferralCodeConfigType' => function () {
    return ${($_ = isset($this->services['Plugin\\ReferralCode\\Form\\Type\\Admin\\ReferralCodeConfigType']) ? $this->services['Plugin\\ReferralCode\\Form\\Type\\Admin\\ReferralCodeConfigType'] : ($this->services['Plugin\\ReferralCode\\Form\\Type\\Admin\\ReferralCodeConfigType'] = new \Plugin\ReferralCode\Form\Type\Admin\ReferralCodeConfigType())) && false ?: '_'};
}, 'Plugin\\ReferralCode\\Form\\Type\\Admin\\ReferralCodeDetailType' => function () {
    return ${($_ = isset($this->services['Plugin\\ReferralCode\\Form\\Type\\Admin\\ReferralCodeDetailType']) ? $this->services['Plugin\\ReferralCode\\Form\\Type\\Admin\\ReferralCodeDetailType'] : $this->load('getReferralCodeDetailTypeService.php')) && false ?: '_'};
}, 'Plugin\\ReferralCode\\Form\\Type\\Admin\\ReferralCodeSearchCategoryType' => function () {
    return ${($_ = isset($this->services['Plugin\\ReferralCode\\Form\\Type\\Admin\\ReferralCodeSearchCategoryType']) ? $this->services['Plugin\\ReferralCode\\Form\\Type\\Admin\\ReferralCodeSearchCategoryType'] : $this->load('getReferralCodeSearchCategoryTypeService.php')) && false ?: '_'};
}, 'Plugin\\ReferralCode\\Form\\Type\\Admin\\ReferralCodeType' => function () {
    return ${($_ = isset($this->services['Plugin\\ReferralCode\\Form\\Type\\Admin\\ReferralCodeType']) ? $this->services['Plugin\\ReferralCode\\Form\\Type\\Admin\\ReferralCodeType'] : $this->load('getReferralCodeTypeService.php')) && false ?: '_'};
}, 'Plugin\\ReferralCode\\Form\\Type\\ReferralCodeUseType' => function () {
    return ${($_ = isset($this->services['Plugin\\ReferralCode\\Form\\Type\\ReferralCodeUseType']) ? $this->services['Plugin\\ReferralCode\\Form\\Type\\ReferralCodeUseType'] : $this->load('getReferralCodeUseTypeService.php')) && false ?: '_'};
}, 'Plugin\\RelatedProduct4\\Form\\Type\\Admin\\RelatedProductType' => function () {
    return ${($_ = isset($this->services['Plugin\\RelatedProduct4\\Form\\Type\\Admin\\RelatedProductType']) ? $this->services['Plugin\\RelatedProduct4\\Form\\Type\\Admin\\RelatedProductType'] : $this->load('getRelatedProductTypeService.php')) && false ?: '_'};
}, 'Plugin\\YamatoPayment4\\Form\\Type\\Admin\\ConfigType' => function () {
    return ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Form\\Type\\Admin\\ConfigType']) ? $this->services['Plugin\\YamatoPayment4\\Form\\Type\\Admin\\ConfigType'] : $this->load('getConfigType2Service.php')) && false ?: '_'};
}, 'Plugin\\YamatoPayment4\\Form\\Type\\Admin\\SearchPaymentType' => function () {
    return ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Form\\Type\\Admin\\SearchPaymentType']) ? $this->services['Plugin\\YamatoPayment4\\Form\\Type\\Admin\\SearchPaymentType'] : $this->load('getSearchPaymentTypeService.php')) && false ?: '_'};
}, 'Plugin\\YamatoPayment4\\Form\\Type\\CreditChangeType' => function () {
    return ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Form\\Type\\CreditChangeType']) ? $this->services['Plugin\\YamatoPayment4\\Form\\Type\\CreditChangeType'] : $this->load('getCreditChangeTypeService.php')) && false ?: '_'};
}, 'Plugin\\YamatoPayment4\\Form\\Type\\PaymentRecvType' => function () {
    return ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Form\\Type\\PaymentRecvType']) ? $this->services['Plugin\\YamatoPayment4\\Form\\Type\\PaymentRecvType'] : $this->load('getPaymentRecvTypeService.php')) && false ?: '_'};
}, 'Plugin\\YamatoSubscription\\Form\\Type\\Admin\\SearchCategoryType' => function () {
    return ${($_ = isset($this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\SearchCategoryType']) ? $this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\SearchCategoryType'] : $this->load('getSearchCategoryTypeService.php')) && false ?: '_'};
}, 'Plugin\\YamatoSubscription\\Form\\Type\\Admin\\SearchYamatoSubsOrderType' => function () {
    return ${($_ = isset($this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\SearchYamatoSubsOrderType']) ? $this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\SearchYamatoSubsOrderType'] : ($this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\SearchYamatoSubsOrderType'] = new \Plugin\YamatoSubscription\Form\Type\Admin\SearchYamatoSubsOrderType())) && false ?: '_'};
}, 'Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsConfigType' => function () {
    return ${($_ = isset($this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsConfigType']) ? $this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsConfigType'] : ($this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsConfigType'] = new \Plugin\YamatoSubscription\Form\Type\Admin\YamatoSubsConfigType())) && false ?: '_'};
}, 'Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsDiscountProductType' => function () {
    return ${($_ = isset($this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsDiscountProductType']) ? $this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsDiscountProductType'] : $this->load('getYamatoSubsDiscountProductTypeService.php')) && false ?: '_'};
}, 'Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsDiscountType' => function () {
    return ${($_ = isset($this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsDiscountType']) ? $this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsDiscountType'] : $this->load('getYamatoSubsDiscountTypeService.php')) && false ?: '_'};
}, 'Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsUsersOrderItemType' => function () {
    return ${($_ = isset($this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsUsersOrderItemType']) ? $this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsUsersOrderItemType'] : $this->load('getYamatoSubsUsersOrderItemTypeService.php')) && false ?: '_'};
}, 'Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsUsersOrderType' => function () {
    return ${($_ = isset($this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsUsersOrderType']) ? $this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsUsersOrderType'] : ($this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsUsersOrderType'] = new \Plugin\YamatoSubscription\Form\Type\Admin\YamatoSubsUsersOrderType())) && false ?: '_'};
}, 'Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsUsersShippingType' => function () {
    return ${($_ = isset($this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsUsersShippingType']) ? $this->services['Plugin\\YamatoSubscription\\Form\\Type\\Admin\\YamatoSubsUsersShippingType'] : $this->load('getYamatoSubsUsersShippingTypeService.php')) && false ?: '_'};
}, 'Plugin\\YamatoSubscription\\Form\\Type\\MypageDetailType' => function () {
    return ${($_ = isset($this->services['Plugin\\YamatoSubscription\\Form\\Type\\MypageDetailType']) ? $this->services['Plugin\\YamatoSubscription\\Form\\Type\\MypageDetailType'] : $this->load('getMypageDetailTypeService.php')) && false ?: '_'};
}, 'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => function () {
    return ${($_ = isset($this->services['form.type.entity']) ? $this->services['form.type.entity'] : $this->load('getForm_Type_EntityService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => function () {
    return ${($_ = isset($this->services['form.type.choice']) ? $this->services['form.type.choice'] : $this->load('getForm_Type_ChoiceService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => function () {
    return ${($_ = isset($this->services['form.type.file']) ? $this->services['form.type.file'] : $this->load('getForm_Type_FileService.php')) && false ?: '_'};
}, 'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => function () {
    return ${($_ = isset($this->services['form.type.form']) ? $this->services['form.type.form'] : $this->load('getForm_Type_FormService.php')) && false ?: '_'};
}]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['Eccube\\Form\\Extension\\DoctrineOrmExtension']) ? $this->services['Eccube\\Form\\Extension\\DoctrineOrmExtension'] : $this->load('getDoctrineOrmExtensionService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['Eccube\\Form\\Extension\\HelpTypeExtension']) ? $this->services['Eccube\\Form\\Extension\\HelpTypeExtension'] : ($this->services['Eccube\\Form\\Extension\\HelpTypeExtension'] = new \Eccube\Form\Extension\HelpTypeExtension())) && false ?: '_'};
    yield 2 => ${($_ = isset($this->services['form.type_extension.form.transformation_failure_handling']) ? $this->services['form.type_extension.form.transformation_failure_handling'] : $this->load('getForm_TypeExtension_Form_TransformationFailureHandlingService.php')) && false ?: '_'};
    yield 3 => ${($_ = isset($this->services['form.type_extension.form.http_foundation']) ? $this->services['form.type_extension.form.http_foundation'] : $this->load('getForm_TypeExtension_Form_HttpFoundationService.php')) && false ?: '_'};
    yield 4 => ${($_ = isset($this->services['form.type_extension.form.validator']) ? $this->services['form.type_extension.form.validator'] : $this->load('getForm_TypeExtension_Form_ValidatorService.php')) && false ?: '_'};
    yield 5 => ${($_ = isset($this->services['form.type_extension.upload.validator']) ? $this->services['form.type_extension.upload.validator'] : $this->load('getForm_TypeExtension_Upload_ValidatorService.php')) && false ?: '_'};
    yield 6 => ${($_ = isset($this->services['form.type_extension.csrf']) ? $this->services['form.type_extension.csrf'] : $this->load('getForm_TypeExtension_CsrfService.php')) && false ?: '_'};
}, 7), 'Eccube\\Form\\Type\\Admin\\ProductType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['Plugin\\RelatedProduct4\\Form\\Extension\\Admin\\RelatedCollectionExtension']) ? $this->services['Plugin\\RelatedProduct4\\Form\\Extension\\Admin\\RelatedCollectionExtension'] : $this->load('getRelatedCollectionExtensionService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Form\\Extension\\ProductTypeExtension']) ? $this->services['Plugin\\YamatoPayment4\\Form\\Extension\\ProductTypeExtension'] : $this->load('getProductTypeExtensionService.php')) && false ?: '_'};
}, 2), 'Eccube\\Form\\Type\\Shopping\\OrderType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Form\\Extension\\CreditExtention']) ? $this->services['Plugin\\YamatoPayment4\\Form\\Extension\\CreditExtention'] : $this->load('getCreditExtentionService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Form\\Extension\\CvsExtension']) ? $this->services['Plugin\\YamatoPayment4\\Form\\Extension\\CvsExtension'] : $this->load('getCvsExtensionService.php')) && false ?: '_'};
    yield 2 => ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Form\\Extension\\DeferredSmsExtention']) ? $this->services['Plugin\\YamatoPayment4\\Form\\Extension\\DeferredSmsExtention'] : $this->load('getDeferredSmsExtentionService.php')) && false ?: '_'};
}, 3), 'Eccube\\Form\\Type\\Admin\\PaymentRegisterType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Form\\Extension\\PaymentRegisterTypeExtension']) ? $this->services['Plugin\\YamatoPayment4\\Form\\Extension\\PaymentRegisterTypeExtension'] : $this->load('getPaymentRegisterTypeExtensionService.php')) && false ?: '_'};
}, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.repeated.validator']) ? $this->services['form.type_extension.repeated.validator'] : ($this->services['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension())) && false ?: '_'};
}, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_extension.submit.validator']) ? $this->services['form.type_extension.submit.validator'] : ($this->services['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension())) && false ?: '_'};
}, 1)], new RewindableGenerator(function () {
    yield 0 => ${($_ = isset($this->services['form.type_guesser.validator']) ? $this->services['form.type_guesser.validator'] : $this->load('getForm_TypeGuesser_ValidatorService.php')) && false ?: '_'};
    yield 1 => ${($_ = isset($this->services['form.type_guesser.doctrine']) ? $this->services['form.type_guesser.doctrine'] : $this->load('getForm_TypeGuesser_DoctrineService.php')) && false ?: '_'};
}, 2), NULL)], ${($_ = isset($this->services['form.resolved_type_factory']) ? $this->services['form.resolved_type_factory'] : ($this->services['form.resolved_type_factory'] = new \Symfony\Component\Form\ResolvedFormTypeFactory())) && false ?: '_'});
