<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'Plugin\YamatoPayment4\Form\Extension\CreditExtention' shared autowired service.

include_once $this->targetDirs[3].'/vendor/symfony/form/FormTypeExtensionInterface.php';
include_once $this->targetDirs[3].'/vendor/symfony/form/AbstractTypeExtension.php';
include_once $this->targetDirs[3].'/app/Plugin/YamatoPayment4/Form/Extension/CreditExtention.php';

return $this->services['Plugin\\YamatoPayment4\\Form\\Extension\\CreditExtention'] = new \Plugin\YamatoPayment4\Form\Extension\CreditExtention(${($_ = isset($this->services['Eccube\\Common\\EccubeConfig']) ? $this->services['Eccube\\Common\\EccubeConfig'] : ($this->services['Eccube\\Common\\EccubeConfig'] = new \Eccube\Common\EccubeConfig($this))) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Repository\\ProductRepository']) ? $this->services['Eccube\\Repository\\ProductRepository'] : $this->getProductRepositoryService()) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Repository\\OrderRepository']) ? $this->services['Eccube\\Repository\\OrderRepository'] : $this->getOrderRepositoryService()) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Repository\\PaymentRepository']) ? $this->services['Eccube\\Repository\\PaymentRepository'] : $this->getPaymentRepositoryService()) && false ?: '_'}, ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Repository\\ConfigRepository']) ? $this->services['Plugin\\YamatoPayment4\\Repository\\ConfigRepository'] : $this->getConfigRepositoryService()) && false ?: '_'}, ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Repository\\YamatoOrderRepository']) ? $this->services['Plugin\\YamatoPayment4\\Repository\\YamatoOrderRepository'] : $this->getYamatoOrderRepositoryService()) && false ?: '_'}, ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Repository\\YamatoPaymentMethodRepository']) ? $this->services['Plugin\\YamatoPayment4\\Repository\\YamatoPaymentMethodRepository'] : $this->getYamatoPaymentMethodRepositoryService()) && false ?: '_'}, ${($_ = isset($this->services['request_stack']) ? $this->services['request_stack'] : ($this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack())) && false ?: '_'}, ${($_ = isset($this->services['router']) ? $this->services['router'] : $this->getRouterService()) && false ?: '_'});
