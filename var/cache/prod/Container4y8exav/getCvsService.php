<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'Plugin\YamatoPayment4\Service\Method\Cvs' shared autowired service.

include_once $this->targetDirs[3].'/src/Eccube/Service/Payment/PaymentMethodInterface.php';
include_once $this->targetDirs[3].'/app/Plugin/YamatoPayment4/Service/Method/Cvs.php';

$a = ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Repository\\YamatoPaymentMethodRepository']) ? $this->services['Plugin\\YamatoPayment4\\Repository\\YamatoPaymentMethodRepository'] : $this->getYamatoPaymentMethodRepositoryService()) && false ?: '_'};

return $this->services['Plugin\\YamatoPayment4\\Service\\Method\\Cvs'] = new \Plugin\YamatoPayment4\Service\Method\Cvs(${($_ = isset($this->services['Eccube\\Common\\EccubeConfig']) ? $this->services['Eccube\\Common\\EccubeConfig'] : ($this->services['Eccube\\Common\\EccubeConfig'] = new \Eccube\Common\EccubeConfig($this))) && false ?: '_'}, ${($_ = isset($this->services['eccube.purchase.flow.shopping']) ? $this->services['eccube.purchase.flow.shopping'] : $this->load('getEccube_Purchase_Flow_ShoppingService.php')) && false ?: '_'}, ${($_ = isset($this->services['Eccube\\Repository\\Master\\OrderStatusRepository']) ? $this->services['Eccube\\Repository\\Master\\OrderStatusRepository'] : $this->getOrderStatusRepositoryService()) && false ?: '_'}, ${($_ = isset($this->services['doctrine.orm.default_entity_manager']) ? $this->services['doctrine.orm.default_entity_manager'] : $this->getDoctrine_Orm_DefaultEntityManagerService()) && false ?: '_'}, ${($_ = isset($this->services['router']) ? $this->services['router'] : $this->getRouterService()) && false ?: '_'}, ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Repository\\ConfigRepository']) ? $this->services['Plugin\\YamatoPayment4\\Repository\\ConfigRepository'] : $this->getConfigRepositoryService()) && false ?: '_'}, $a, $a, ${($_ = isset($this->services['Plugin\\YamatoPayment4\\Repository\\YamatoOrderRepository']) ? $this->services['Plugin\\YamatoPayment4\\Repository\\YamatoOrderRepository'] : $this->getYamatoOrderRepositoryService()) && false ?: '_'});
